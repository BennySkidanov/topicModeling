

name: unzip

on:
  workflow_dispatch:
  
    inputs:
        repo_name:
          description: 'name of repository'
          required: true
          default: 'Compress'

jobs:

  step_7_download_matrixes:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: build essentials
        run: sudo apt install build-essential
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
         python-version: 3.8

      - name: download requirements
        run: |
              cd `git rev-parse --show-toplevel`
              pip install pipreqs
              pipreqs --ignore diagnoser,sfl_diagnoser .
              pip install -r requirements.txt
              pip install pyarrow
              pip install fastparquet

      - name: create dir matrixes
        run: |
              cd `git rev-parse --show-toplevel`
              mkdir matrixes_before_change
              
      - name: unzip matrixes
        run: |
              cd `git rev-parse --show-toplevel`
              sudo apt install unzip
              unzip matrixes/${{github.event.inputs.repo_name}}.zip -d matrixes/${{github.event.inputs.repo_name}}
              
              
      - name: Script
        run: |
              import os
              active_bugs = False
              path = os.path.join('.','matrixes',f'{${{github.event.inputs.repo_name}}}')
              a= os.listdir(path)
              print(a)
              for file in a:
                  if 'bug-mining' in file:
                      p = os.path.join(path,file)
                      old = os.path.join(p,'framework', 'projects',f'{${{github.event.inputs.repo_name}}}',f"matrix_{file.split('_')[1]}_full.json")
                      new = os.path.join('.',"matrixes_before_change",f"{file.split('_')[1]}.json")
                      os.rename(old,new)
                      if not active_bugs:
                          active_bugs = True
                          os.rename(os.path.join(p,'framework', 'projects',f'{${{github.event.inputs.repo_name}}}',"active-bugs.csv"),os.path.join('.',"matrixes_before_change","active-bugs.csv"))
        shell: python
      
      - name: Upload bug-mining
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: step_7_artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./matrixes_before_change
        
