# This is a basic workflow to help you get started with Actions

name: Combined

on:
  workflow_dispatch:

jobs:
  
  steps_1-3_gathering_data:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    
    strategy:
      fail-fast: false
      matrix:
        project_folder_name: [apache_commons-weaver]
        
    outputs:
        folder_name: ${{matrix.project_folder_name}}
 
    steps:
      - uses: actions/checkout@v2

      - name: build essentials
        run: sudo apt install build-essential
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: download requirements
        run: |
              cd `git rev-parse --show-toplevel`
              pip install pipreqs
              pipreqs --ignore diagnoser,sfl_diagnoser .
              pip install -r requirements.txt
      
      - name: gathering
        run: |
              cd `git rev-parse --show-toplevel`
              python Run.py ${{matrix.project_folder_name}}
      # Runs a set of commands using the runners shell

      - name: Upload data
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: steps_1-3_artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./projects
          
          
  step_4_topic_modeling:
  
    needs: steps_1-3_gathering_data
    
    runs-on: ubuntu-18.04
    
    steps:
      - uses: actions/checkout@v2

      - name: build essentials
        run: sudo apt install build-essential
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: download requirements
        run: |
              cd `git rev-parse --show-toplevel`
              pip install pipreqs
              pipreqs --ignore diagnoser,sfl_diagnoser .
              pip install -r requirements.txt
      
      - name: create folder "projects"
        run: |
              cd `git rev-parse --show-toplevel`
              mkdir projects
              
      - name: Download results for - 
        uses: actions/download-artifact@v2
        with:
          name: steps_1-3_artifact
          path: ./projects
          
      - name: topic modeling
        run: |
              cd `git rev-parse --show-toplevel`
              python topicModeling.py ${{needs.steps_1-3_gathering_data.outputs.folder_name}}

      - name: Upload data
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: step_4_artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./projects


  step_5_other_methods:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    
    strategy:
      fail-fast: false
      matrix:
        #techniques: [BugLocator,  BRTracer, BLUiR, AmaLgam,  BLIA, Locus]
        techniques: [BugLocator]
        group: [Commons]
        project: [LANG]
        folder_name: [BugLocator_Lang]
    
    outputs:
       project: ${{matrix.project}}
       group: ${{matrix.group}}
       folder_name: ${{matrix.folder_name}}
 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    - uses: actions/checkout@v2
      with:
        repository: matanhaz/Bench4BL
    - name: first
      run: sudo apt install build-essential
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    # Runs a set of commands using the runners shell
    - name: Download subjects’ archives
      run: |
            pip install virtualenv
            cd `git rev-parse --show-toplevel`
            bootstrap/downloads.sh
    # Runs a set of commands using the runners shell
    - name: Download subjects’ archives
      run: |
            mkdir data
            bootstrap/unpacking.sh ./archives ./data ${{matrix.group}} ${{matrix.project}}
    - name: Install Indri
      run: |
          mkdir depots
          cd depots
          wget https://excellmedia.dl.sourceforge.net/project/lemur/lemur/indri-5.15/indri-5.15.tar.gz
          tar -xzf indri-5.15.tar.gz
          cd indri-5.15
          ./configure --prefix=`pwd`/../install
          make
          make install
    - name: Generate Settings.txt file
      run: |
          echo indripath=`git rev-parse --show-toplevel`/depots/install/bin/ > `git rev-parse --show-toplevel`/techniques/Settings.txt
    - name: Create virtual environment
      run: |
          cd `git rev-parse --show-toplevel`
          virtualenv venv -p `which python2`
          # source venv/bin/activate
          pip install -r requirements.txt
    - name: Build JAR
      run: |
          bootstrap/buildjar.sh
#       - name: Source virtual environment
#         run: |
#             cd `git rev-parse --show-toplevel`
#             .venv/bin/activate

    - name: Modify PATH
      run: |
          export PATH=$PATH:`pwd`/depots/install/bin
    - name: ls
      run: ls -R

    - name: Inflate the source codes
      run: |
          cd `git rev-parse --show-toplevel`/scripts
          python launcher_GitInflator.py  -g ${{matrix.group}} -p ${{matrix.project}}
    - name: Build bug repositories
      run: |
            cd `git rev-parse --show-toplevel`/scripts
            python launcher_repoMaker.py  -g ${{matrix.group}} -p ${{matrix.project}}
            python launcher_DupRepo.py  -g ${{matrix.group}} -p ${{matrix.project}}
            python Counting.py  -g ${{matrix.group}} -p ${{matrix.project}}
#       - name: Execute previous techniques
#         run: |
#               mkdir -p ../techniques/locus_properties
#               mkdir -p ../techniques/blia_properties
#               cd `git rev-parse --show-toplevel`/scripts
#               python launcher_Tool.py -w Exp1   -g Apache -p CAMEL



    - name: Collect performance results
      run: |
            cd `git rev-parse --show-toplevel`/scripts
            python launcher_Tool.py -w ${{matrix.folder_name}}   -g ${{matrix.group}} -p ${{matrix.project}} -t ${{matrix.techniques}}
#              python launcher_Tool.py -w ExpFirst   -g Apache -p CAMEL -t ${{ matrix.techniques }}

    - name: save performance results
      run: |
            cd `git rev-parse --show-toplevel`/scripts
            python launcher_XLSResultsAll.py -w ${{matrix.folder_name}}
    - name: Upload data
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: step_5_artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./expresults
  
  
  step_6_modify_other_methods_data:
    needs: [step_5_other_methods,step_4_topic_modeling, steps_1-3_gathering_data]
    
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: build essentials
        run: sudo apt install build-essential
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          
      - name: download requirements
        run: |
              cd `git rev-parse --show-toplevel`
              pip install pipreqs
              pipreqs --ignore diagnoser,sfl_diagnoser .
              pip install -r requirements.txt
      
      - name: create folder "projects"
        run: |
              cd `git rev-parse --show-toplevel`
              mkdir projects
              
      - name: Download results step 4
        uses: actions/download-artifact@v2
        with:
          name: step_4_artifact
          path: projects
          
      - name: Download results step 5
        uses: actions/download-artifact@v2
        with:
          name: step_5_artifact
          path: projects/${{needs.steps_1-3_gathering_data.outputs.folder_name}}
          
      - name: modify
        run: |
              cd `git rev-parse --show-toplevel`
              python modify_other_methods_data.py ${{needs.step_5_other_methods.outputs.project}} ${{needs.step_5_other_methods.outputs.group}} ${{needs.step_5_other_methods.outputs.folder_name}} ${{needs.steps_1-3_gathering_data.outputs.folder_name}}
              
      - name: Upload data
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: step_6_artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: projects
  
  
  #step_7:
  
  
  #step_8:

        
   # - name: Upload math result for job 2
   #   uses: actions/upload-artifact@v2
   #   with:
   #     name: homework
   #       path: ./math-homework.txt
